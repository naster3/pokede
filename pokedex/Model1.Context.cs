//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pokedex
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbpokemonEntities2 : DbContext
    {
        public dbpokemonEntities2()
            : base("name=dbpokemonEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<orden> orden { get; set; }
        public virtual DbSet<pokemon> pokemon { get; set; }
        public virtual DbSet<tipo> tipo { get; set; }
    
        public virtual int eliminarpokemones(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarpokemones", idParameter);
        }
    
        public virtual int insertarpokemones(Nullable<int> id, string nom, Nullable<System.DateTime> fe, string ti, string pa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var feParameter = fe.HasValue ?
                new ObjectParameter("fe", fe) :
                new ObjectParameter("fe", typeof(System.DateTime));
    
            var tiParameter = ti != null ?
                new ObjectParameter("ti", ti) :
                new ObjectParameter("ti", typeof(string));
    
            var paParameter = pa != null ?
                new ObjectParameter("pa", pa) :
                new ObjectParameter("pa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertarpokemones", idParameter, nomParameter, feParameter, tiParameter, paParameter);
        }
    
        public virtual ObjectResult<leerpokemones_Result> leerpokemones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<leerpokemones_Result>("leerpokemones");
        }
    
        public virtual int modificarpokemones(string nom, Nullable<System.DateTime> fe, Nullable<int> id, string ti, string pa)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var feParameter = fe.HasValue ?
                new ObjectParameter("fe", fe) :
                new ObjectParameter("fe", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tiParameter = ti != null ?
                new ObjectParameter("ti", ti) :
                new ObjectParameter("ti", typeof(string));
    
            var paParameter = pa != null ?
                new ObjectParameter("pa", pa) :
                new ObjectParameter("pa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificarpokemones", nomParameter, feParameter, idParameter, tiParameter, paParameter);
        }
    }
}
